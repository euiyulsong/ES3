short_search <- filter(data, Months == 1)
short_search <- filter(data, Months == 1)
data <- read.csv('../data/clean_num.csv')
short_search <- filter(data, Months == 1)
short_search <- filter(data, Months <= 3)
lm(online_job_postings ~ networking, data)
?lm
summary(lm(online_job_postings ~ networking, data))
resid(postings)
postings <- lm(online_job_postings ~ networking, data)
summary(postings)
resid(postings)
postings <- lm(online_job_postings ~ networking, data)
plot(resid(postings))
postings.lm <- lm(online_job_postings ~ networking, data)
summary(postings.lm)
plot(resid(postings.lm))
postings.lm <- loess(online_job_postings ~ networking, data)
summary(postings.lm)
plot(resid(postings.lm))
short_search <- filter(data, Months <= 3) %>% filter(online_job_postings < 500)
data <- read.csv('../data/clean_num.csv')
postings.lm <- lm(online_job_postings ~ networking, data)
plot(postings.lm)
plot(postings.lm)
ggplot(data, aes(x = networking, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
library(ggplot2)
library(base)
library(car)
ggplot(data, aes(x = networking, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
no_out <- filter(data, online_job_postings < 500)
ggplot(no_out, aes(x = networking, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
postings.lm <- lm(networking ~ online_job_postings, no_out)
summary(postings.lm)
ggplot(no_out, aes(x = networking, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(no_out, aes(x = networking, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
postings.lm <- loess(networking ~ online_job_postings, no_out)
summary(postings.lm)
plot(resid(postings.lm))
plot(resid(postings.lm))
postings.lm <- lm(networking ~ online_job_postings, no_out)
summary(postings.lm)
plot(resid(postings.lm))
postings.lm <- lm(online_job_postings ~ networking, no_out)
summary(postings.lm)
plot(resid(postings.lm))
postings.lm <- lm(online_job_postings ~ networking, no_out)
plot(postings.lm)
plot(resid(postings.lm))
plot(resid(postings.lm))
tree <- rpart(Months ~ ., data = train, method = "class", control=rpart.control(minsplit=10, minbucket=5, cp=0.01))
fancyRpartPlot(tree)
ggplot(data, aes(x = cover_letter_hours, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(no_out, aes(x = cover_letter_hours, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(no_out, aes(x = cover_letter_hours, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = cover_letter_hours)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = cover_letter_hours + resume_hrs, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = cover_letter_hours + resume_hrs + no_career_fairs, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = resume_hrs, y = online_job_postings)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = resume_hrs)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = cover_letter_hours)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = resume_hrs)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = cover_letter_hours)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = resume_hrs)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(no_out, aes(x = online_job_postings, y = cover_letter_hours)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
library(ggplot2)
library(base)
library(car)
data <- read.csv('../data/clean_num.csv')
View(data)
View(data)
ggplot(data, aes(x = LinkedIn, y = LinkedIn_resource)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = LinkedIn, y = LinkedIn_resource)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = Employer_campus_visits, y = Employer_Visits_resource)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = LinkedIn_resource, y = LinkedIn)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = LinkedIn, y = LinkedIn_resource)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
data <- read.csv('../data/clean_num_sorted.csv')
for (i in 31:38){
print(ggplot(data, aes(x = data[[i + 10]], y = data[[i]])) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(y = colnames(data)[i], x = colnames(data)[i + 10]))
}
for (i in 31:38){
print(ggplot(data, aes(x = data[[i + 10]], y = data[[i]])) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
labs(y = colnames(data)[i], x = colnames(data)[i + 10]))
}
ggplot(no_out, aes(y = online_job_postings, x = Months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(y = online_job_postings, x = Months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(y = online_job_postings, x = Months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
postings.lm <- lm(online_job_postings ~ Months, data)
summary(postings.lm)
plot(resid(postings.lm))
ggplot(data, aes(y = online_job_postings, x = Months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
postings.lm <- lm(online_job_postings ~ Months, data)
summary(postings.lm)
library(ggplot2)
data <- read.csv("../data/clean_num_BS-BA.csv")
LessFive <- filter(data, Months < 3)
View(data)
View(data)
LessFive <- filter(data, Months < 3)
library(ggplot2)
data <- read.csv("../data/clean_num_BS-BA.csv")
LessFive <- filter(data, Months < 3)
library(dplyr)
data <- read.csv("../data/clean_num_BS-BA.csv")
LessFive <- filter(data, Months <= 3)
library(dplyr)
library(rpart)
library(rattle)
setwd('~/University of Washington/Senior/Fall/Info 370/project-es3')
data <- read.csv('data/clean_num.csv')
# reformat data
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
filter(Months <= 3)
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
tree <- rpart(Months ~ ., data = train, method = "class", control=rpart.control(minbucket=4))
fancyRpartPlot(tree)
data <- read.csv('data/clean_num.csv')
# reformat data
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
filter(Months <= 3)
data <- read.csv('data/clean_num.csv')
library(ggplot2)
#setwd('~/git-repos/project-es3')
data <- read.csv("../data/370_clean_num_2.csv") #has more records than clean_num
for (i in 1:ncol(data)){
print(ggplot(data, aes(y = data[[i]], x = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
labs(y = colnames(data)[i]))
}
library(dplyr)
library(rpart)
library(rattle)
data <- read.csv('data/clean_num.csv')
getwd()
data <- read.csv('../data/clean_num.csv')
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
filter(Months <= 3)
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
# create decision tree
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=1))
fancyRpartPlot(tree)
View(data)
View(data)
data <- read.csv('../data/clean_num.csv')
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
#filter(Months <= 3)
#postings per months
mutate(postings_per_month = online_job_postings / Months)
View(data)
View(data)
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
# create decision tree
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=1))
fancyRpartPlot(tree)
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
#filter(Months <= 3)
#postings per months
mutate(postings_per_month = online_job_postings / Months) %>%
select(-online_job_postings)
data <- read.csv('../data/clean_num.csv')
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
#filter(Months <= 3)
#postings per months
mutate(postings_per_month = online_job_postings / Months) %>%
select(-online_job_postings)
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
# create decision tree
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=1))
fancyRpartPlot(tree)
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=2))
fancyRpartPlot(tree)
data <- read.csv('../data/clean_num.csv')
# reformat data
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
filter(Months <= 4)
#postings per months
#mutate(postings_per_month = online_job_postings / Months) %>%
#select(-online_job_postings)
# split into training and test datasets
# (filter out people just beginning job search (no job, searching for < 3 mo.))
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
# create decision tree
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=2))
fancyRpartPlot(tree)
data <- read.csv('../data/clean_num.csv')
getwd()
# reformat data
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
#mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_) %>%
#get subset where job found in >= 3 months
filter(Months <= 5)
train <- data %>%
filter((has_position == 0 & Months == 0) | (None_of_these == 1 & Months == 0) | has_position == 1 | None_of_these == 0) %>%
select(-None_of_these, -has_position)
test <- data %>%
filter((has_position == 0 & Months == 1) | (None_of_these == 1 & Months == 1) ) %>%
select(-None_of_these, -has_position)
# create decision tree
tree <- rpart(Months ~ ., data = train, method = "anova", control=rpart.control(minbucket=2))
fancyRpartPlot(tree)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#setwd('~/git-repos/project-es3')
data <- read.csv("../data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
#internship = 1, part time = 2, full time = 3
#female = 1, male = 0
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
for (i in 31:38){
print(ggplot(data, aes(x = data[[i + 10]], y = data[[i]])) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
labs(y = colnames(data)[i], x = colnames(data)[i + 10]))
}
data <- read.csv('data/clean_num_sorted.csv')
data <- read.csv('../data/clean_num_sorted.csv')
for (i in 31:38){
print(ggplot(data, aes(x = data[[i + 10]], y = data[[i]])) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
labs(y = colnames(data)[i], x = colnames(data)[i + 10]))
}
library(ggplot2)
library(base)
library(car)
data <- read.csv('../data/clean_num.csv')
ggplot(no_out, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = in.major_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = in.major_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm) +
xlim(2,4)
ggplot(data, aes(x = in.major_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm) +
xlim(2,4.5)
ggplot(data, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = internships)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = cumulative_GPA, y = knowledge)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = cumulative_GPA, y = knowledge)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = knowledge)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = knowledge, y = cumulative_GPA)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
ggplot(data, aes(x = cumulative_GPA, y = knowledge)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=loess)
